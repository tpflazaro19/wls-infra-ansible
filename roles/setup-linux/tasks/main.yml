#===============================================================================
# This role configure a Oracle Linux 7 system with requirements for 
# Fusion Middleware infrastructrure installation.
# Author: Timothy Lazaro
#===============================================================================

# Configure Linux
# ---------------
- name: Update all packages
  yum: name=* state=latest
- name: Enable optional repositories
  command: 'yum-config-manager --enable rhui-REGION-rhel-server-optional'
  when: ansible_os_family == "RedHat"
- name: Install required libraries
  yum: name={{ item }} state=latest
  with_items: '{{ packages_list }}'
- name: Disable SELinux
  selinux: state=disabled
  when: ansible_virtualization_type != 'docker'
- name: Change kernel parameters
  sysctl: name="{{ item.key }}" value="{{ item.value }}" state=present
  with_dict: '{{ kernel_params }}'
  ignore_errors: yes

# Add limits for weblogic user
# ----------------------------
- name: Add weblogic user limits
  lineinfile: dest=/etc/security/limits.conf line='* {{ item.limit }} {{ item.type}} {{ item.value }}'
  with_items:
    - { limit: 'soft', type: nofile, value: '{{ soft_no_file }}' }
    - { limit: 'hard', type: nofile, value: '{{ hard_no_file }}' }
    - { limit: 'soft', type: nproc, value: '{{ soft_nproc }}' }
    - { limit: 'hard', type: nproc, value: '{{ hard_nproc }}' }

# Add pamd
# --------
- name: Create /etc/pam.d/limits.conf
  file:
    path: /etc/pam.d/limits.conf
    state: touch
- name: Update pamd rule's control in /etc/pam.d/limits.conf
  pamd:
    name: limits.conf
    type: session
    control: required
    module_path: pam_limits.so
    new_control: sufficient
    
# Create user and groups
# ----------------------
- name: Create groups
  group: name={{ app_group }} state=present
- name: Create user
  user: name={{ app_user }} group={{ app_group }}

# Create Base Directories
# -----------------------
- name: Create Stage directory
  file: state=directory path={{ stage_dir }} mode=0777
- name: Create App directory
  file: state=directory path={{ base_dir }} mode=0755
- name: Create Data directory
  file: state=directory path={{ data_dir }} mode=0755
- name: Create WebLogic Home directory
  file: state=directory path={{ middleware_home }} owner={{ app_user }} group={{ app_group }}
- name: Create WebLogic Data directory
  file: state=directory path={{ middleware_data }} owner={{ app_user }} group={{ app_group }}
- name: Create Domain Home directory
  file: state=directory path={{ domains_home }} owner={{ app_user }} group={{ app_group }}
- name: Create Applications Home directory
  file: state=directory path={{ applications_home }} owner={{ app_user }} group={{ app_group }}
- name: Create JDK home directory
  file: state=directory path={{ jdk_home }}
  
# Install JDK
# -----------
- name: Download JDK archive
  get_url: url='{{ jdk_installer_url }}' dest={{ stage_dir }} force=no
- name: Extract JDK archive
  unarchive:
    remote_src: true
    src: '{{ stage_dir }}/{{ jdk_installation_archive }}'
    dest: '{{ jdk_home }}'
    creates: '{{ jdk_folder }}'
- name: Remove JDK archive
  file: 
    path: '{{ stage_dir }}/{{ jdk_installation_archive }}'
    state: absent
- name: Change entropy device for java
  command: "sed -i.bak 's/\\/dev\\/random/\\/dev\\/.\\/urandom/' {{ jdk_folder }}/jre/lib/security/java.security"
- name: Create symlink to latest JDK installation
  file:
    src: '{{ jdk_folder }}'
    dest: '{{ java_home }}'
    state: link
- name: Add JAVA_HOME environment variariables in bashrc
  lineinfile: dest='/home/{{ app_user }}/.bashrc' line='export JAVA_HOME={{ java_home }}'
- name: Add Java bin folder to path in bashrc
  lineinfile: dest='/home/{{ app_user }}/.bashrc' line='export PATH=$PATH:$JAVA_HOME/bin'
